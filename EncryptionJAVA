import javax.swing.JOptionPane;

public class CaesarCipherApp {

    // Encrypts plain text using a key for Caesar Cipher
    public static String encrypt(String text, int key) {
        StringBuilder result = new StringBuilder();

        for (char character : text.toCharArray()) {
            if (Character.isUpperCase(character)) {
                char ch = (char)(((character - 'A' + key) % 26) + 'A');
                result.append(ch);
            } else if (Character.isLowerCase(character)) {
                char ch = (char)(((character - 'a' + key) % 26) + 'a');
                result.append(ch);
            } else {
                result.append(character); // Non-alphabetic characters
            }
        }

        return result.toString();
    }

    // Decrypts cipher text using a key for Caesar Cipher
    public static String decrypt(String text, int key) {
        return encrypt(text, 26 - (key % 26));
    }

    public static void main(String[] args) {
        JOptionPane.showMessageDialog(null, "SIMPLE CAESAR CIPHER ENCRYPTION APP");

        String inputText = JOptionPane.showInputDialog("Enter text to encrypt:");
        String keyInput = JOptionPane.showInputDialog("Enter shift key (integer):");

        int key;
        try {
            key = Integer.parseInt(keyInput);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid key input. Please enter a valid integer.");
            return;
        }

        String encryptedText = encrypt(inputText, key);
        String decryptedText = decrypt(encryptedText, key);

        String result = "Encrypted text: " + encryptedText + "\n" +
                        "Decrypted text: " + decryptedText;

        JOptionPane.showMessageDialog(null, result);
        JOptionPane.showMessageDialog(null, "END OF PROGRAM ");
    }
}
